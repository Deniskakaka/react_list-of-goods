{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","console","log","reverse","App","state","NONE","className","type","this","onClick","setState","prev","map","el","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAazB,OAXIC,IAAaJ,EAASO,UACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CN,IAAaJ,EAASY,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAI3CC,QAAQC,IAAIX,EAAUC,GAEfA,EAAaC,EAAaU,UAAYV,G,SA5B1CN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,4CAME,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBE,KAAKJ,MAAMd,WAAaJ,EAASO,UAAY,YAC1EgB,QAAS,kBAAM,EAAKC,UAAS,SAACC,GAC5B,OAAO,2BACFA,GADL,IAEErB,SAAUJ,EAASO,eANzB,iCAaA,wBACEc,KAAK,SACLD,UAAS,4BAAuBE,KAAKJ,MAAMd,WAAaJ,EAASY,QAAU,YAC3EW,QAAS,kBAAM,EAAKC,UAAS,SAACC,GAC5B,OAAO,2BACFA,GADL,IAEErB,SAAUJ,EAASY,aANzB,4BAaA,wBACES,KAAK,SACLD,UAAS,6BAAwBE,KAAKJ,MAAMb,YAAc,YAC1DkB,QAAS,kBAAM,EAAKC,UAAS,SAACC,GAC5B,OAAO,2BACFA,GADL,IAEEpB,YAAaoB,EAAKpB,iBANxB,qBAaCiB,KAAKJ,MAAMd,UAAYkB,KAAKJ,MAAMb,WACjC,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAM,EAAKC,UAAS,SAACC,GAC5B,OAAO,2BACFA,GADL,IAEErB,SAAUJ,EAASmB,KACnBd,YAAY,QAPlB,mBAaE,MAGN,6BACGH,EAAkBD,EAAiBqB,KAAKJ,OACtCQ,KAAI,SAACC,GACJ,OAAO,oBAAa,UAAQ,OAArB,SAA6BA,GAApBA,eArE9B,GAAyBC,IAAMC,eClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3811586c.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPHABET && 'is-light'}`}\n            onClick={() => this.setState((prev: State) => {\n              return {\n                ...prev,\n                sortType: SortType.ALPHABET,\n              };\n            })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={() => this.setState((prev: State) => {\n              return {\n                ...prev,\n                sortType: SortType.LENGTH,\n              };\n            })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!this.state.isReversed && 'is-light'}`}\n            onClick={() => this.setState((prev: State) => {\n              return {\n                ...prev,\n                isReversed: !prev.isReversed,\n              };\n            })}\n          >\n            Reverse\n          </button>\n\n          {this.state.sortType || this.state.isReversed ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => this.setState((prev: State) => {\n                return {\n                  ...prev,\n                  sortType: SortType.NONE,\n                  isReversed: false,\n                };\n              })}\n            >\n              Reset\n            </button>\n          ) : ''}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state)\n            .map((el: string) => {\n              return <li key={el} data-cy=\"Good\">{el}</li>;\n            })}\n\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}